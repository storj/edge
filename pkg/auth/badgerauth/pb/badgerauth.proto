// Copyright (C) 2021 Storj Labs, Inc.
// See LICENSE for copying information.

syntax = "proto3";

option go_package = "storj.io/edge/pkg/auth/badgerauth/pb";

package badgerauth;

message Record {
  // record data
  int64 created_at_unix = 1;
  bool public = 2;

  // denormalized information from access grant
  string satellite_address = 3;
  bytes macaroon_head = 4;
  int64 expires_at_unix = 5;

  // sensitive data
  bytes encrypted_secret_key = 6;
  bytes encrypted_access_grant = 7;

  // invalidation tracking
  string invalidation_reason = 8;
  int64 invalidated_at_unix = 9;

  enum State { CREATED = 0; }

  // synchronization-related data
  State state = 10;
}

message ReplicationRequestEntry {
  bytes node_id = 1;
  uint64 clock = 2;
}

message ReplicationRequest { repeated ReplicationRequestEntry entries = 1; }

message ReplicationResponseEntry {
  bytes node_id = 1;
  bytes encryption_key_hash = 2;
  Record record = 3;
}

message ReplicationResponse { repeated ReplicationResponseEntry entries = 1; }

message PeekRequest { bytes encryption_key_hash = 1; }
message PeekResponse { Record record = 1; }

message PingRequest {}
message PingResponse { bytes node_id = 1; }

service ReplicationService {
  rpc Ping(PingRequest) returns (PingResponse);
  rpc Peek(PeekRequest) returns (PeekResponse);
  rpc Replicate(ReplicationRequest) returns (ReplicationResponse);
}
